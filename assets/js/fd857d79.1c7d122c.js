"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[3621],{602:(e,i,t)=>{t.r(i),t.d(i,{Tag:()=>a,assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>l,metadata:()=>n,toc:()=>u});const n=JSON.parse('{"id":"api-class-reference/utility/SimpleBit","title":"SimpleBit","description":"SimpleBit - is a super simple utility module that allows you easily edit 32-bit numbers with ease.","source":"@site/docs/api-class-reference/utility/SimpleBit.md","sourceDirName":"api-class-reference/utility","slug":"/api-class-reference/utility/SimpleBit","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/SimpleBit","draft":false,"unlisted":false,"editUrl":"https://github.com/NOPESbucket/RetroBox/edit/main/docs/api-class-reference/utility/SimpleBit.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"apiSidebar","previous":{"title":"Signal","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/Signal"},"next":{"title":"Stack","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/Stack"}}');var r=t(4848),s=t(8453);const l={sidebar_position:11},c=void 0,o={},a=({children:e,color:i})=>(0,r.jsx)("span",{style:{fontSize:"0.75em",backgroundColor:i,borderRadius:"4px",color:"#fff",padding:"0.2rem 0.5rem",fontWeight:"bold"},children:e}),u=[{value:"Methods",id:"methods",level:2},{value:"&gt; <code>SimpleBit.setBit(num: number, pos: number)</code> <Tag>Static</Tag>",id:"-simplebitsetbitnum-number-pos-number-static",level:3},{value:"&gt; <code>SimpleBit.clearBit(num: number, pos: number)</code> <Tag>Static</Tag>",id:"-simplebitclearbitnum-number-pos-number-static",level:3},{value:"&gt; <code>SimpleBit.flipBit(num: number, pos: number)</code> <Tag>Static</Tag>",id:"-simplebitflipbitnum-number-pos-number-static",level:3},{value:"&gt; <code>SimpleBit.checkBit(num: number, pos: number): boolean</code> <Tag>Static</Tag>",id:"-simplebitcheckbitnum-number-pos-number-boolean-static",level:3}];function m(e){const i={code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.p,{children:"SimpleBit - is a super simple utility module that allows you easily edit 32-bit numbers with ease."}),"\n",(0,r.jsx)(i.h2,{id:"methods",children:"Methods"}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsxs)(i.h3,{id:"-simplebitsetbitnum-number-pos-number-static",children:["> ",(0,r.jsx)(i.code,{children:"SimpleBit.setBit(num: number, pos: number)"})," ",(0,r.jsx)(a,{color:"#6e4999",children:"Static"})]}),"\n",(0,r.jsx)(i.p,{children:"Sets the bit to 1 at a specific position."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-lua",children:"local SimpleBit = require(path.to.SimpleBit)\r\n\r\nlocal num = 0 -- binary: 0000\r\nlocal result = SimpleBit.setBit(num, 2) -- sets bit 2\r\nprint(result) -- Output: 2 (binary: 0010)\n"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsxs)(i.h3,{id:"-simplebitclearbitnum-number-pos-number-static",children:["> ",(0,r.jsx)(i.code,{children:"SimpleBit.clearBit(num: number, pos: number)"})," ",(0,r.jsx)(a,{color:"#6e4999",children:"Static"})]}),"\n",(0,r.jsx)(i.p,{children:"Sets the bit to 0 at a specific position."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-lua",children:"local num = 7 -- binary: 0111\r\nlocal result = SimpleBit.clearBit(num, 2) -- clears bit 2\r\nprint(result) -- Output: 5 (binary: 0101)\n"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsxs)(i.h3,{id:"-simplebitflipbitnum-number-pos-number-static",children:["> ",(0,r.jsx)(i.code,{children:"SimpleBit.flipBit(num: number, pos: number)"})," ",(0,r.jsx)(a,{color:"#6e4999",children:"Static"})]}),"\n",(0,r.jsx)(i.p,{children:"Flips the bit at a specific position."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-lua",children:"local num = 4 -- binary: 0100\r\nlocal result = SimpleBit.flipBit(num, 3) -- flips bit 3 (set to 0)\r\nprint(result) -- Output: 0 (binary: 0000)\r\n\r\nlocal result2 = SimpleBit.flipBit(num, 2) -- flips bit 2 (set to 1)\r\nprint(result2) -- Output: 6 (binary: 0110)\n"})}),"\n",(0,r.jsx)(i.hr,{}),"\n",(0,r.jsxs)(i.h3,{id:"-simplebitcheckbitnum-number-pos-number-boolean-static",children:["> ",(0,r.jsx)(i.code,{children:"SimpleBit.checkBit(num: number, pos: number): boolean"})," ",(0,r.jsx)(a,{color:"#6e4999",children:"Static"})]}),"\n",(0,r.jsx)(i.p,{children:"Checks whether the bit is 1 or 0. Returns true if bit is set to 1."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{className:"language-lua",children:"local num = 5 -- binary: 0101\r\nprint(SimpleBit.checkBit(num, 1)) -- true (bit 1 is 1)\r\nprint(SimpleBit.checkBit(num, 2)) -- false (bit 2 is 0)\r\nprint(SimpleBit.checkBit(num, 3)) -- true (bit 3 is 1)\n"})}),"\n",(0,r.jsx)(i.hr,{})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(m,{...e})}):m(e)}},8453:(e,i,t)=>{t.d(i,{R:()=>l,x:()=>c});var n=t(6540);const r={},s=n.createContext(r);function l(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);