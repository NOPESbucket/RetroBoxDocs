"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[7622],{5799:(e,r,t)=>{t.r(r),t.d(r,{Tag:()=>n,assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});const a=JSON.parse('{"id":"api-class-reference/utility/Caster","title":"Caster","description":"Caster - utility class for raycasting which has debug mode built-in. SupportsBlockcast() and :Spherecast()","source":"@site/docs/api-class-reference/utility/Caster.md","sourceDirName":"api-class-reference/utility","slug":"/api-class-reference/utility/Caster","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/Caster","draft":false,"unlisted":false,"editUrl":"https://github.com/NOPESbucket/RetroBox/edit/main/docs/api-class-reference/utility/Caster.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"apiSidebar","previous":{"title":"BoneBuilder","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/BoneBuilder"},"next":{"title":"CharacterBuilder","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/CharacterBuilder"}}');var s=t(4848),c=t(8453);const i={sidebar_position:3},o=void 0,l={},n=({children:e,color:r})=>(0,s.jsx)("span",{style:{fontSize:"0.75em",backgroundColor:r,borderRadius:"4px",color:"#fff",padding:"0.2rem 0.5rem",fontWeight:"bold"},children:e}),d=[{value:"Types",id:"types",level:2},{value:"Properties",id:"properties",level:2},{value:"&gt; <code>DisplayLimit: number</code> <Tag>Public</Tag>",id:"-displaylimit-number-public",level:3},{value:"&gt; <code>Lifetime: number</code> <Tag>Public</Tag>",id:"-lifetime-number-public",level:3},{value:"&gt; <code>Color: Color3</code> <Tag>Public</Tag>",id:"-color-color3-public",level:3},{value:"&gt; <code>WorldRoot: WorldRoot</code> <Tag>Public</Tag>",id:"-worldroot-worldroot-public",level:3},{value:"&gt; <code>Persitent: boolean</code> <Tag>Public</Tag>",id:"-persitent-boolean-public",level:3},{value:"&gt; <code>Visualize: boolean</code> <Tag>Public</Tag>",id:"-visualize-boolean-public",level:3},{value:"&gt; <code>_persistentParts: { Line: Part?, Sphere: Part?, Block: Part? }</code> <Tag>Private</Tag>",id:"-_persistentparts--line-part-sphere-part-block-part--private",level:3},{value:"&gt; <code>_trove: </code> <code>Trove.Trove</code> <Tag>Private</Tag>",id:"-_trove--trovetrove-private",level:3},{value:"Constructor",id:"constructor",level:2},{value:"&gt; <code>Caster.new(config: Config?)</code>",id:"-casternewconfig-config",level:3},{value:"Methods",id:"methods",level:2},{value:"&gt; <code>Caster:_updatePersistent(casterType: string, part: Part)</code> <Tag>Private</Tag>",id:"-caster_updatepersistentcastertype-string-part-part-private",level:3},{value:"&gt; <code>Caster:_storeInfo(target: Part, result: RaycastResult): ()</code> <Tag>Private</Tag>",id:"-caster_storeinfotarget-part-result-raycastresult--private",level:3},{value:"&gt; <code>Caster:Raycast(origin: Vector3, direction: Vector3, raycastParams: RaycastParams?): RaycastResult?</code> <Tag>Public</Tag>",id:"-casterraycastorigin-vector3-direction-vector3-raycastparams-raycastparams-raycastresult-public",level:3},{value:"&gt; <code>Caster:Spherecast(origin: Vector3, radius: number, direction: Vector3, raycastParams: RaycastParams?): RaycastResult?</code> <Tag>Public</Tag>",id:"-casterspherecastorigin-vector3-radius-number-direction-vector3-raycastparams-raycastparams-raycastresult-public",level:3},{value:"&gt; <code>Caster:Blockcast(cframe: CFrame, size: Vector3, direction: Vector3, raycastParams: RaycastParams?): RaycastResult?</code> <Tag>Public</Tag>",id:"-casterblockcastcframe-cframe-size-vector3-direction-vector3-raycastparams-raycastparams-raycastresult-public",level:3},{value:"&gt; <code>Caster:Destroy()</code> <Tag>Public</Tag>",id:"-casterdestroy-public",level:3}];function u(e){const r={a:"a",code:"code",h2:"h2",h3:"h3",hr:"hr",img:"img",p:"p",pre:"pre",strong:"strong",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(r.p,{children:["Caster - utility class for raycasting which has debug mode built-in. Supports ",":Raycast","(), ",":Blockcast","() and ",":Spherecast","()"]}),"\n",(0,s.jsxs)(r.p,{children:[(0,s.jsx)(r.img,{src:"https://cdn.discordapp.com/attachments/1192299550166241303/1368219759220359239/image.png?ex=682696b2&is=68254532&hm=f56c3653f99a184ca942478a340d0c60bac644f3260751bea730af472ab7b045&",alt:"caster-debug1"}),"\r\n",(0,s.jsx)(r.img,{src:"https://cdn.discordapp.com/attachments/1192299550166241303/1368219759505838120/image.png?ex=682696b2&is=68254532&hm=105a9ef05150ab5f760ea06bec04b9953391ed83b04c245468a9b02fe032766c&",alt:"caster-debug2"}),"\r\n",(0,s.jsx)(r.img,{src:"https://cdn.discordapp.com/attachments/1192299550166241303/1368219759753171076/image.png?ex=682696b3&is=68254533&hm=fade5555e2f7f5d5b43f1fb408ad89f08295697b30f53d1014b50eb793a08d92&",alt:"caster-debug3"}),"\r\n",(0,s.jsx)(r.img,{src:"https://cdn.discordapp.com/attachments/1192299550166241303/1368176936639266896/image.png?ex=68266ed1&is=68251d51&hm=583b4758f9f60dfc9f8af382a07a9f84db1bf1aa5a0d052476384c4da9b6278c&",alt:"caster-debug4"})]}),"\n",(0,s.jsx)(r.h2,{id:"types",children:"Types"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.pre,{children:(0,s.jsx)(r.code,{className:"language-lua",children:"type Config = {\r\n\tDisplayLimit: number?,\r\n\tLifetime: number?,\r\n\tColor: Color3?,\r\n\tWorldRoot: WorldRoot?,\r\n\tPersitent: boolean?,\r\n\tVisualize: boolean?,\r\n}\n"})}),"\n",(0,s.jsx)(r.h2,{id:"properties",children:"Properties"}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-displaylimit-number-public",children:["> ",(0,s.jsx)(r.code,{children:"DisplayLimit: number"})," ",(0,s.jsx)(n,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,s.jsx)(r.p,{children:"Limits the amount of visible debug ray's at once. Oldest debug ray's will be deleted."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-lifetime-number-public",children:["> ",(0,s.jsx)(r.code,{children:"Lifetime: number"})," ",(0,s.jsx)(n,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,s.jsx)(r.p,{children:"Determines how long will debug ray live, before being deleted."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-color-color3-public",children:["> ",(0,s.jsx)(r.code,{children:"Color: Color3"})," ",(0,s.jsx)(n,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,s.jsx)(r.p,{children:"Determines debug ray color."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-worldroot-worldroot-public",children:["> ",(0,s.jsx)(r.code,{children:"WorldRoot: WorldRoot"})," ",(0,s.jsx)(n,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,s.jsxs)(r.p,{children:["Determines debug ray WorldRoot (usefull if you have WorldRoot that is not ",(0,s.jsx)(r.strong,{children:"Workspace"}),")"]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-persitent-boolean-public",children:["> ",(0,s.jsx)(r.code,{children:"Persitent: boolean"})," ",(0,s.jsx)(n,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,s.jsx)(r.p,{children:"Determines whether debug ray's are persistent or not."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-visualize-boolean-public",children:["> ",(0,s.jsx)(r.code,{children:"Visualize: boolean"})," ",(0,s.jsx)(n,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,s.jsx)(r.p,{children:"Determines whether debug ray's are visible or not."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-_persistentparts--line-part-sphere-part-block-part--private",children:["> ",(0,s.jsx)(r.code,{children:"_persistentParts: { Line: Part?, Sphere: Part?, Block: Part? }"})," ",(0,s.jsx)(n,{color:"#4958df",children:"Private"})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-_trove--trovetrove-private",children:["> ",(0,s.jsx)(r.code,{children:"_trove: "})," ",(0,s.jsx)(r.a,{href:"/RetroBoxDocs/docs/api-class-reference/utility/Trove",children:(0,s.jsx)(r.code,{children:"Trove.Trove"})})," ",(0,s.jsx)(n,{color:"#4958df",children:"Private"})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsx)(r.h2,{id:"constructor",children:"Constructor"}),"\n",(0,s.jsxs)(r.h3,{id:"-casternewconfig-config",children:["> ",(0,s.jsx)(r.code,{children:"Caster.new(config: Config?)"})]}),"\n",(0,s.jsx)(r.h2,{id:"methods",children:"Methods"}),"\n",(0,s.jsxs)(r.h3,{id:"-caster_updatepersistentcastertype-string-part-part-private",children:["> ",(0,s.jsx)(r.code,{children:"Caster:_updatePersistent(casterType: string, part: Part)"})," ",(0,s.jsx)(n,{color:"#4958df",children:"Private"})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-caster_storeinfotarget-part-result-raycastresult--private",children:["> ",(0,s.jsx)(r.code,{children:"Caster:_storeInfo(target: Part, result: RaycastResult): ()"})," ",(0,s.jsx)(n,{color:"#4958df",children:"Private"})]}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-casterraycastorigin-vector3-direction-vector3-raycastparams-raycastparams-raycastresult-public",children:["> ",(0,s.jsx)(r.code,{children:"Caster:Raycast(origin: Vector3, direction: Vector3, raycastParams: RaycastParams?): RaycastResult?"})," ",(0,s.jsx)(n,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,s.jsx)(r.p,{children:"Casts a raycasts."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-casterspherecastorigin-vector3-radius-number-direction-vector3-raycastparams-raycastparams-raycastresult-public",children:["> ",(0,s.jsx)(r.code,{children:"Caster:Spherecast(origin: Vector3, radius: number, direction: Vector3, raycastParams: RaycastParams?): RaycastResult?"})," ",(0,s.jsx)(n,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,s.jsx)(r.p,{children:"Casts a spherecast."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-casterblockcastcframe-cframe-size-vector3-direction-vector3-raycastparams-raycastparams-raycastresult-public",children:["> ",(0,s.jsx)(r.code,{children:"Caster:Blockcast(cframe: CFrame, size: Vector3, direction: Vector3, raycastParams: RaycastParams?): RaycastResult?"})," ",(0,s.jsx)(n,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,s.jsx)(r.p,{children:"Casts a blockcast."}),"\n",(0,s.jsx)(r.hr,{}),"\n",(0,s.jsxs)(r.h3,{id:"-casterdestroy-public",children:["> ",(0,s.jsx)(r.code,{children:"Caster:Destroy()"})," ",(0,s.jsx)(n,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,s.jsx)(r.p,{children:"Destroy's the Caster, releasing it from memory."}),"\n",(0,s.jsx)(r.hr,{})]})}function p(e={}){const{wrapper:r}={...(0,c.R)(),...e.components};return r?(0,s.jsx)(r,{...e,children:(0,s.jsx)(u,{...e})}):u(e)}},8453:(e,r,t)=>{t.d(r,{R:()=>i,x:()=>o});var a=t(6540);const s={},c=a.createContext(s);function i(e){const r=a.useContext(c);return a.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function o(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),a.createElement(c.Provider,{value:r},e.children)}}}]);