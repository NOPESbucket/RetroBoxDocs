"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[8052],{3815:(e,n,t)=>{t.r(n),t.d(n,{Tag:()=>r,assets:()=>s,contentTitle:()=>d,default:()=>b,frontMatter:()=>a,metadata:()=>l,toc:()=>o});const l=JSON.parse('{"id":"api-class-reference/utility/SyncedTable","title":"SyncedTable","description":"SyncedTable - is a data type which will sync data of the table between one or multiple clients and a server allowing a either one-way or two-way communication storage.","source":"@site/docs/api-class-reference/utility/SyncedTable.md","sourceDirName":"api-class-reference/utility","slug":"/api-class-reference/utility/SyncedTable","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/SyncedTable","draft":false,"unlisted":false,"editUrl":"https://github.com/NOPESbucket/RetroBox/edit/main/docs/api-class-reference/utility/SyncedTable.md","tags":[],"version":"current","sidebarPosition":15,"frontMatter":{"sidebar_position":15},"sidebar":"apiSidebar","previous":{"title":"Symbol","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/Symbol"},"next":{"title":"TableKit","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/TableKit"}}');var c=t(4848),i=t(8453);const a={sidebar_position:15},d=void 0,s={},r=({children:e,color:n})=>(0,c.jsx)("span",{style:{fontSize:"0.75em",backgroundColor:n,borderRadius:"4px",color:"#fff",padding:"0.2rem 0.5rem",fontWeight:"bold"},children:e}),o=[{value:"Types",id:"types",level:2},{value:"&gt; <code>SyncedTableEnum.ONE_WAY_COMMUNICATION</code>",id:"-syncedtableenumone_way_communication",level:3},{value:"&gt; <code>SyncedTableEnum.TWO_WAY_COMMUNICATION</code>",id:"-syncedtableenumtwo_way_communication",level:3},{value:"Properties",id:"properties",level:2},{value:"&gt; <code>content: {T}</code> <Tag>Public</Tag>",id:"-content-t-public",level:3},{value:"&gt; <code>mode: SyncedTableEnum</code> <Tag>Public</Tag>",id:"-mode-syncedtableenum-public",level:3},{value:"&gt; <code>tableID: string</code> <Tag>Public</Tag>",id:"-tableid-string-public",level:3},{value:"&gt; <code>TableSynced: Signal.Signal&lt;{T}&gt;</code> <Tag>Public</Tag>",id:"-tablesynced-signalsignalt-public",level:3},{value:"&gt; <code>_syncTableConnection: string</code> <Tag>Private</Tag>",id:"-_synctableconnection-string-private",level:3},{value:"&gt; <code>_player: Player</code> <Tag>Private</Tag>",id:"-_player-player-private",level:3},{value:"Constructor",id:"constructor",level:2},{value:"&gt; <code>SyncedTable.new&lt;T&gt;(mode: SyncedTableEnum, tableID: string, player: Player?)</code>",id:"-syncedtablenewtmode-syncedtableenum-tableid-string-player-player",level:3},{value:"Methods",id:"methods",level:2},{value:"&gt; <code>SyncedTable:SetTable&lt;T&gt;(t: {T})</code> <Tag>Public</Tag>",id:"-syncedtablesettablett-t-public",level:3},{value:"&gt; <code>SyncedTable:GetTable&lt;T&gt;(): {T}</code> <Tag>Public</Tag>",id:"-syncedtablegettablet-t-public",level:3},{value:"&gt; <code>SyncedTable:Sync&lt;T&gt;()</code> <Tag>Public</Tag>",id:"-syncedtablesynct-public",level:3},{value:"&gt; <code>SyncedTable:AwaitSync&lt;T&gt;()</code> <Tag>Public</Tag>",id:"-syncedtableawaitsynct-public",level:3},{value:"&gt; <code>SyncedTable:Destroy&lt;T&gt;()</code> <Tag>Public</Tag>",id:"-syncedtabledestroyt-public",level:3}];function h(e){const n={admonition:"admonition",code:"code",h2:"h2",h3:"h3",hr:"hr",p:"p",pre:"pre",strong:"strong",...(0,i.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.p,{children:["SyncedTable - is a data type which will sync data of the table between one or multiple clients and a server allowing a either ",(0,c.jsx)(n.strong,{children:"one-way"})," or ",(0,c.jsx)(n.strong,{children:"two-way"})," communication storage."]}),"\n",(0,c.jsx)(n.h2,{id:"types",children:"Types"}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{className:"language-lua",children:"type SyncedTableEnum = {\r\n    ONE_WAY_COMMUNICATION = 1,\r\n    TWO_WAY_COMMUNICATION = 2\r\n}\n"})}),"\n",(0,c.jsxs)(n.h3,{id:"-syncedtableenumone_way_communication",children:["> ",(0,c.jsx)(n.code,{children:"SyncedTableEnum.ONE_WAY_COMMUNICATION"})]}),"\n",(0,c.jsx)(n.p,{children:"Only server is authorized to sync table with client"}),"\n",(0,c.jsxs)(n.h3,{id:"-syncedtableenumtwo_way_communication",children:["> ",(0,c.jsx)(n.code,{children:"SyncedTableEnum.TWO_WAY_COMMUNICATION"})]}),"\n",(0,c.jsx)(n.p,{children:"Both server and client are authorized to sync table"}),"\n",(0,c.jsx)(n.h2,{id:"properties",children:"Properties"}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-content-t-public",children:["> ",(0,c.jsx)(n.code,{children:"content: {T}"})," ",(0,c.jsx)(r,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,c.jsx)(n.p,{children:"Table content that will be synced."}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-mode-syncedtableenum-public",children:["> ",(0,c.jsx)(n.code,{children:"mode: SyncedTableEnum"})," ",(0,c.jsx)(r,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,c.jsx)(n.p,{children:"Determines in what mode the table will be able to sync."}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-tableid-string-public",children:["> ",(0,c.jsx)(n.code,{children:"tableID: string"})," ",(0,c.jsx)(r,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,c.jsx)(n.p,{children:"An ID that represent a table that will be synced with."}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-tablesynced-signalsignalt-public",children:["> ",(0,c.jsx)(n.code,{children:"TableSynced: Signal.Signal<{T}>"})," ",(0,c.jsx)(r,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,c.jsx)(n.p,{children:"This event fires whenever table is synced."}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-_synctableconnection-string-private",children:["> ",(0,c.jsx)(n.code,{children:"_syncTableConnection: string"})," ",(0,c.jsx)(r,{color:"#4958df",children:"Private"})]}),"\n",(0,c.jsx)(n.p,{children:"A string that represent the Remote connection."}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-_player-player-private",children:["> ",(0,c.jsx)(n.code,{children:"_player: Player"})," ",(0,c.jsx)(r,{color:"#4958df",children:"Private"})]}),"\n",(0,c.jsx)(n.p,{children:"A player to whom table will get synced with"}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsx)(n.h2,{id:"constructor",children:"Constructor"}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-syncedtablenewtmode-syncedtableenum-tableid-string-player-player",children:["> ",(0,c.jsx)(n.code,{children:"SyncedTable.new<T>(mode: SyncedTableEnum, tableID: string, player: Player?)"})]}),"\n",(0,c.jsx)(n.admonition,{type:"note",children:(0,c.jsx)(n.p,{children:"You don't need to pass a player reference on client-side."})}),"\n",(0,c.jsx)(n.h2,{id:"methods",children:"Methods"}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-syncedtablesettablett-t-public",children:["> ",(0,c.jsx)(n.code,{children:"SyncedTable:SetTable<T>(t: {T})"})," ",(0,c.jsx)(r,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,c.jsx)(n.p,{children:"Sets the table."}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-syncedtablegettablet-t-public",children:["> ",(0,c.jsx)(n.code,{children:"SyncedTable:GetTable<T>(): {T}"})," ",(0,c.jsx)(r,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,c.jsx)(n.p,{children:"Returns the mutable table."}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-syncedtablesynct-public",children:["> ",(0,c.jsx)(n.code,{children:"SyncedTable:Sync<T>()"})," ",(0,c.jsx)(r,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,c.jsx)(n.p,{children:"Sync the table with the client."}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-syncedtableawaitsynct-public",children:["> ",(0,c.jsx)(n.code,{children:"SyncedTable:AwaitSync<T>()"})," ",(0,c.jsx)(r,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,c.jsx)(n.p,{children:"Sync the table with the client."}),"\n",(0,c.jsx)(n.admonition,{type:"warning",children:(0,c.jsx)(n.p,{children:"This method Yields!"})}),"\n",(0,c.jsx)(n.hr,{}),"\n",(0,c.jsxs)(n.h3,{id:"-syncedtabledestroyt-public",children:["> ",(0,c.jsx)(n.code,{children:"SyncedTable:Destroy<T>()"})," ",(0,c.jsx)(r,{color:"#e3ce8b",children:"Public"})]}),"\n",(0,c.jsx)(n.p,{children:"Destroy's the CharacterLoadedWrapper, releasing it from memory."}),"\n",(0,c.jsx)(n.admonition,{type:"note",children:(0,c.jsx)(n.p,{children:"SyncedTables created on client are not deleted, so keep that in mind."})}),"\n",(0,c.jsx)(n.hr,{})]})}function b(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>d});var l=t(6540);const c={},i=l.createContext(c);function a(e){const n=l.useContext(i);return l.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:a(e.components),l.createElement(i.Provider,{value:n},e.children)}}}]);