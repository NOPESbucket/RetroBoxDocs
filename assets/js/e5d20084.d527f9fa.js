"use strict";(self.webpackChunkdocumentation=self.webpackChunkdocumentation||[]).push([[9783],{8453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>o});var n=i(6540);const r={},s=n.createContext(r);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),n.createElement(s.Provider,{value:t},e.children)}},9473:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"api-class-reference/utility/Signal","title":"Signal","description":"Author: Sleitnick","source":"@site/docs/api-class-reference/utility/Signal.md","sourceDirName":"api-class-reference/utility","slug":"/api-class-reference/utility/Signal","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/Signal","draft":false,"unlisted":false,"editUrl":"https://github.com/NOPESbucket/RetroBox/edit/main/docs/api-class-reference/utility/Signal.md","tags":[],"version":"current","sidebarPosition":11,"frontMatter":{"sidebar_position":11},"sidebar":"apiSidebar","previous":{"title":"Queue","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/Queue"},"next":{"title":"SimpleBit","permalink":"/RetroBoxDocs/docs/api-class-reference/utility/SimpleBit"}}');var r=i(4848),s=i(8453);const a={sidebar_position:11},o=void 0,c={},l=[];function u(e){const t={a:"a",code:"code",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.p,{children:(0,r.jsx)(t.code,{children:"Author: Sleitnick"})}),"\n",(0,r.jsxs)(t.p,{children:["Signal - is a Signal class which has effectively identical behavior to a normal ",(0,r.jsx)(t.code,{children:"RBXScriptSignal"}),",\r\nwith the only difference being a couple extra stack frames at the bottom of the stack trace when an error is thrown.\r\nThis implementation caches runner coroutines, so the ability to yield in the signal handlers comes at minimal extra cost over a naive signal\r\nimplementation that either always or never spawns a thread."]}),"\n",(0,r.jsxs)(t.p,{children:["Full documentation ",(0,r.jsx)(t.a,{href:"https://sleitnick.github.io/RbxUtil/api/Signal/",children:"here"}),"."]})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);